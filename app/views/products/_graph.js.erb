<script type="text/javascript">
// //Width and height
// var w = 800;
// var h = 500;
// var padding = 30;

//Static dataset
// var dataset = [
//         [5, 20], [480, 90], [250, 50], [100, 33], [330, 95],
//         [410, 12], [475, 44], [25, 67], [85, 21], [220, 88],
//         [600, 150]
//         ];

// //Create scale functions
// var xScale = d3.scale.linear()
//            .domain([0, d3.max(dataset, function(d) { return d[0]; })])
//            .range([padding, w - padding * 2]);
//
// var yScale = d3.scale.linear()
//            .domain([0, d3.max(dataset, function(d) { return d[1]; })])
//            .range([h - padding, padding]);
//
// var rScale = d3.scale.linear()
//            .domain([0, d3.max(dataset, function(d) { return d[1]; })])
//            .range([2, 5]);

// //Define X axis
// var xAxis = d3.svg.axis()
//           .scale(xScale)
//           .orient("bottom")
//           .ticks(5);
//
// //Define Y axis
// var yAxis = d3.svg.axis()
//           .scale(yScale)
//           .orient("left")
//           .ticks(5);

// //Create SVG element
// var svg = d3.select("body")
//       .append("svg")
//       .attr("width", w)
//       .attr("height", h);

//Create circles
svg.selectAll("circle")
   .data(dataset)
   .enter()
   .append("circle")
   .attr("cx", function(d) {
      return xScale(d[0]);
   })
   .attr("cy", function(d) {
      return yScale(d[1]);
   })
   .attr("r", function(d) {
      return rScale(d[1]);
   });


// //Create labels
// svg.selectAll("text")
//    .data(dataset)
//    .enter()
//    .append("text")
//    .text(function(d) {
//    		return d[0] + "," + d[1];
//    })
//    .attr("x", function(d) {
//    		return xScale(d[0]);
//    })
//    .attr("y", function(d) {
//    		return yScale(d[1]);
//    })
//    .attr("font-family", "sans-serif")
//    .attr("font-size", "11px")
//    .attr("fill", "red");


// //Create X axis
// svg.append("g")
//   .attr("class", "axis")
//   .attr("transform", "translate(0," + (h - padding) + ")")
//   .call(xAxis);
//
// //Create Y axis
// svg.append("g")
//   .attr("class", "axis")
//   .attr("transform", "translate(" + padding + ",0)")
//   .call(yAxis);
// </script>

<script>
//Static dataset
var dataset = [
        [5, 20], [480, 90], [250, 50], [100, 33], [330, 95],
        [410, 12], [475, 44], [25, 67], [85, 21], [220, 88],
        [600, 150]
        ];

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;


var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.close); });

var svg = d3.select("body").append("svg")
    .data(dataset)
    .enter()
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");




  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Price ($)");

  svg.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", line);
});

</script>
